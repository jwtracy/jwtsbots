---
- name: Linux Setup
  hosts: all
  connection: local
  become: true

  tasks:
    - name: vscode
      block:
        - name: vscode | Get key
          ansible.builtin.get_url:
            url: https://packages.microsoft.com/keys/microsoft.asc
            dest: /etc/apt/keyrings/microsoft.asc
            mode: "0664"

        - name: vscode | Dearmor
          ansible.builtin.shell:
            cmd: "gpg --dearmor < /etc/apt/keyrings/microsoft.asc > /etc/apt/keyrings/packages.microsoft.gpg"

        - name: vscode | Add repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
            state: present
            filename: vscode

    - name: Add github repository
      block:
        - name: Get key
          ansible.builtin.get_url:
            url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
            dest: /etc/apt/keyrings/githubcli-archive-keyring.gpg
            mode: "0664"

        - name: Add repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
            state: present
            filename: github-cli

    - name: Add cloudflare repository
      block:
        - name: Get key
          ansible.builtin.get_url:
            url: https://pkg.cloudflare.com/cloudflare-main.gpg
            dest: /etc/apt/keyrings/cloudflare-main.gpg
            mode: "0664"

        - name: Add repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared jammy main"
            state: present
            filename: cloudflared

    - name: kubectl
      block:
        - name: kubectl | Get key
          ansible.builtin.get_url:
            url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
            dest: /tmp/kubectl-release.key
            mode: "0664"

        - name: kubectl | Dearmor
          ansible.builtin.shell:
            cmd: "gpg --dearmor < /tmp/kubectl-release.key > /etc/apt/keyrings/kubernetes-apt-keyring.gpg"

        - name: kubectl | Add repository
          ansible.builtin.apt_repository:
            repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
            state: present
            filename: kubernetes

    - name: Install apt packages
      ansible.builtin.package:
        update_cache: true
        state: present
        name:
          - apt-transport-https
          - ca-certificates
          - tmux
          - zsh
          - git
          - acl
          - gh
          - neovim
          - kubectl
          - curl
          - wget
          - gpg
          - net-tools
          - unzip
          - jq
          - sshfs
          - snap
          - code
          - python3
          - python3-pip
          - golang-go
          - cloudflared

    - name: Install pip packages
      ansible.builtin.pip:
        state: latest
        extra_args: --break-system-packages
        name:
          - virtualenv
          - pre-commit

    - name: Setup jwtracy sudo
      ansible.builtin.copy:
        src: files/sudoers/sudoer_jwtracy
        dest: /etc/sudoers.d/jwtracy
        mode: "0440"

    - name: Add ansible user
      ansible.builtin.user:
        name: velociraptor
        shell: /bin/bash
        system: true

    - name: Setup velociraptor sudo
      ansible.builtin.copy:
        src: files/sudoers/sudoer_velociraptor
        dest: /etc/sudoers.d/velociraptor
        mode: "0440"

    - name: Add ansible-pull cron job
      ansible.builtin.cron:
        name: ansible auto-provision
        user: velociraptor
        minute: "*/5"
        job: ansible-pull -o -U https://github.com/jwtracy/jwtsbots local.yaml >> /var/log/ansible-pull.log 2>&1

    - name: Set zsh as shell
      ansible.builtin.user:
        name: jwtracy
        shell: /usr/bin/zsh

    - name: Check if zsh installed
      ansible.builtin.stat:
        path: /usr/bin/zsh
      register: zsh

    - name: Install OhMyZsh
      become_user: jwtracy
      when: "not zsh.stat.exists"
      block:
        - name: Install OhMyZsh | Download
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
            dest: /tmp/omz-install.sh
        - name: Install OhMyZsh | Install
          ansible.builtin.command:
            cmd: bash /tmp/omz-install.sh

    - name: jwtracy setup
      become_user: jwtracy
      block:
        - name: Ensure VimPlug dir
          ansible.builtin.file:
            path: ~/.local/share/nvim/site/autoload/
            state: directory
        - name: Ensure TPM dir
          ansible.builtin.file:
            path: ~/.tmux/plugins
            state: directory
        - name: Ensure NeoVim dir
          ansible.builtin.file:
            path: ~/.config/nvim
            state: directory

        - name: Setup VimPlug
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            dest: ~/.local/share/nvim/site/autoload/plug.vim
            mode: "0660"
        - name: Setup TPM
          ansible.builtin.git:
            repo: https://github.com/tmux-plugins/tpm
            dest: ~/.tmux/plugins/tpm
            version: v3.1.0

        - name: Copy .zshrc file
          ansible.builtin.copy:
            src: files/jwtracy/zshrc
            dest: ~/.zshrc
            mode: "0660"
        - name: Copy nvim rc file
          ansible.builtin.copy:
            src: files/jwtracy/init.vim
            dest: ~/.config/nvim/init.vim
            mode: "0660"
        - name: Copy vim rc file
          ansible.builtin.copy:
            src: files/jwtracy/vimrc
            dest: ~/.vimrc
            mode: "0660"
        - name: Copy tmux rc file
          ansible.builtin.copy:
            src: files/jwtracy/tmux.conf
            dest: ~/.tmux.conf
            mode: "0660"
        - name: Copy tmux_dark rc file
          ansible.builtin.copy:
            src: files/jwtracy/tmux_dark.conf
            dest: ~/.tmux_dark.conf
            mode: "0660"
        - name: Copy tmux_light rc file
          ansible.builtin.copy:
            src: files/jwtracy/tmux_light.conf
            dest: ~/.tmux_light.conf
            mode: "0660"

        - name: Install vim plugins
          ansible.builtin.command:
            cmd: nvim +PlugInstall +qa
        - name: Install tmux plugins
          ansible.builtin.command:
            cmd: tmux source ~/.tmux.conf

    - name: Check if helmfile installed
      ansible.builtin.stat:
        path: /usr/local/bin/helmfile
      register: helmfile

    - name: helmfile
      when: "not helmfile.stat.exists"
      block:
        - name: helmfile | Get archive
          ansible.builtin.get_url:
            url: https://github.com/helmfile/helmfile/releases/download/v0.167.1/helmfile_0.167.1_linux_amd64.tar.gz
            dest: /tmp/helmfile.tar.gz
            mode: "0664"

        - name: helmfile | Unarchive
          ansible.builtin.unarchive:
            src: /tmp/helmfile.tar.gz
            dest: /tmp/helmfile

        - name: helmfile | Install
          ansible.builtin.copy:
            src: /tmp/helmfile/helmfile
            dest: /usr/local/bin/helmfile
            mode: "0755"
            owner: root
            group: root

    # - name: Apply helmfile
    #   become_user: jwtracy
    #   block:
    #     - name: Install helmfile.yaml
    #       register: helmfile_contents
    #       ansible.builtin.copy:
    #         src: files/helmfile/
    #         dest: ~/helmfile
